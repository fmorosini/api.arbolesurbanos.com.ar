<!DOCTYPE html>
<html>
<head>
	<title>Mapa</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
	<link rel="stylesheet" href="js/leaflet.css" />
    <style>
        html,body {
              padding: 0;
            margin: 0;
        }
        #mapid {
            height: 100vh;
          
        }
        .buscador {
            z-index: 401;
            position: fixed;
            top: 10px;
            margin-left: 33%;
            margin-right: 33%;
			width: 100%;	
			display: inline-block;					
        }		
		#txtBuscar {
			width: 100%;
		}
		#formulario{
			padding-top: 0;
			width: 33%;
		}
		.suggest-element{
			color: rgb(60, 60, 60, 1);				
		}
		.centrado{
			text-align: center;
		}
        </style>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script src="js/leaflet.markercluster.js"></script>
<link rel="stylesheet" href="js/MarkerCluster.css" />
<link rel="stylesheet" href="js/MarkerCluster.Default.css" />
<script src="https://unpkg.com/leaflet-responsive-popup@0.6.4/leaflet.responsive.popup.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet-responsive-popup@0.6.4/leaflet.responsive.popup.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-responsive-popup@0.6.4/leaflet.responsive.popup.rtl.css" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.css" />
<script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.js" charset="utf-8"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="js/leaflet-tilelayer-wmts.js"></script>
<link rel='stylesheet' href="js/leaflet-compass.min.css" />
<script src="js/leaflet-compass.min.js"></script>
<script src="js/Leaflet.Control.Custom.js"></script>
<script type="application/javascript">

{

	var mymap;

}

function invertir(arreglo){
	var arreglo_invertido = [];
	arreglo_invertido[1] = arreglo[0];
	arreglo_invertido[0] = arreglo[1];

	return arreglo_invertido;
}

function limpiarSugerencias(){
	
	$('#suggestions').empty();
	$('#txtBuscar').val('');

	localStorage.removeItem('nombre')

	window.location.search = ''
	
	cargarDatosEnMapa();
}

function buscar(){   
	
	var nombre = $("#txtBuscar").val();	

	localStorage.setItem('nombre',nombre)

	$('#txtBuscar').val(nombre)

	$('#suggestions').fadeOut(1000);	

	cargarDatosEnMapa();

	
}

function traeSugerencias() {

	var nombre = $('#txtBuscar').val();

	if(nombre == ''){
		$('#suggestions').empty();
	}
	else{

		$.ajax({
			type: "GET",
			url: '{{urlApi}}nombres/' + nombre,
			success: function(data) {

			

				//Escribimos las sugerencias que nos manda la consulta
				$('#suggestions').fadeIn(1000).html(data);
				//Al hacer click en algua de las sugerencias
				$('.suggest-element').on('click', function(){
						//Obtenemos la id unica de la sugerencia pulsada
						var id = $(this).attr('id'); 
						var nombre = $(this).attr('nombre')
						//Editamos el valor del input con data de la sugerencia pulsada
						$('#txtBuscar').val(nombre);
						//Hacemos desaparecer el resto de sugerencias
						$('#suggestions').fadeOut(1000);
						buscar();
					});
				
			}
		});

	}
};

function guardaBBOX(center,zoom){

	localStorage.setItem('center',JSON.stringify(center))
	localStorage.setItem('zoom',zoom)

}

function borratxt(){

	$('#txtBuscar').val('');

}



function cargarDatosEnMapa(){

	


	$('#modalCarga').modal('show')

	mymap.eachLayer(function(l){if(l.options.layer != 'capabaseargenmap') mymap.removeLayer(l)}) //Borra todas las capas y marcadores menos la capa base
	
	var cluster = L.markerClusterGroup({disableClusteringAtZoom: 18});

	var data;
	
	mymap.addLayer(cluster);
		
		L.control.locate({
			locateOptions: {
				showCompass: true,
				drawCircle: true,
				drawMarker: true,
				enableHighAccuracy: true
			},
			strings: {
				title: "Usted está aquí!"}
			
		}).addTo(mymap);

		L.control.custom({
			position: 'topleft',
			content : "<button><i class='fa fa-home'></i></button>",
			classes : 'clase-home-fake leaflet-bar',
			style   :
			{
				margin: '10px',
				padding: '0',
				cursor: 'pointer',
			},
			events:
			{
				click: function(data)
				{
					mymap.setZoom(7);
					mymap.setView([-40.65, -71.3498]);
				}
			}
		})
		.addTo(mymap);

	var contenedor = document.getElementsByClassName('leaflet-top leaflet-left')[0]

	var controles = document.getElementsByClassName('leaflet-control-locate')


	if(controles.length > 1){

		contenedor.removeChild(controles[0])

	}

	controles = document.getElementsByClassName('clase-home-fake')

	if(controles.length > 1){

		contenedor.removeChild(controles[0])

	}
	

	if(localStorage.getItem('center') != null){
			mymap.setView(JSON.parse(localStorage.getItem('center')),localStorage.getItem('zoom'))}
	
	var rootUrl = '{{urlApi}}arbolitos';
	
	if(localStorage.getItem('data') == null){

		//Si no hay data carga todo del server	y limpia parámetros

		localStorage.clear()

		$("#txtBuscar").val('')

		$.get(rootUrl, function(datosJSON) {

            localStorage.setItem('data',JSON.stringify(datosJSON)) //Guarda la data en el Storage

			despliegaDatos(datosJSON,cluster)

		});

	}
	else{

		var cantidad_enservidor = {{arboles}}
		
		var cantidad_enstorage = JSON.parse(localStorage.getItem('data')).features.length

		if(cantidad_enservidor !== cantidad_enstorage){

			console.log('carga todo, hubo cambios')

			//la cantidad de árboles en servidor cambió con respecto a lo que hay en el storge, cargar todo de nuevo

			$.get(rootUrl, function(datosJSON) {

				localStorage.setItem('data',JSON.stringify(datosJSON)) //Guarda la data en el Storage

				//despliegaDatos(datosJSON,cluster)

			});

		}
		

		if(localStorage.getItem('nombre')){

			//filtra

			dataGuardada = JSON.parse(localStorage.getItem('data'))

			var featuresData = new Array()
			
			featuresData = dataGuardada.features

			var nombre = localStorage.getItem('nombre')

			var featuresDataFiltrada = featuresData.filter(function(feature){

				return (feature.properties.nombrecientifico.toUpperCase().indexOf(nombre.toUpperCase()) == 0 || feature.properties.nombrevulgar.toUpperCase().indexOf(nombre.toUpperCase()) == 0)

			})

			data = {"features": featuresDataFiltrada, "type": "FeatureCollection"}			

			despliegaDatos(data,cluster)

		}
		else{

			data = JSON.parse(localStorage.getItem('data'))

			despliegaDatos(data,cluster)

		}
	}
		
	

}

function despliegaDatos(data,cluster)
{
	for(var i = 0; i < data.features.length; i++){
		
			

			var icono_arbol_1 = L.icon({
			iconUrl: 'https://www.arbolesurbanos.com.ar/iconos/1/' + data.features[i].properties.imagen,

			//iconSize:     [80, 80], // size of the icon
			//shadowSize:   [50, 64], // size of the shadow
			iconAnchor:   [40, 0] // point of the icon which will correspond to marker's location
			//shadowAnchor: [4, 62],  // the same for the shadow
			//popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
			});

			var icono_arbol_2 = L.icon({
			iconUrl: 'https://www.arbolesurbanos.com.ar/iconos/2/' + data.features[i].properties.imagen,

			//iconSize:     [60, 60], // size of the icon
			//shadowSize:   [50, 64], // size of the shadow
			iconAnchor:   [30, 0] // point of the icon which will correspond to marker's location
			//shadowAnchor: [4, 62],  // the same for the shadow
			//popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
			});

			var icono_arbol_3 = L.icon({
			iconUrl: 'https://www.arbolesurbanos.com.ar/iconos/3/' + data.features[i].properties.imagen,

			//iconSize:     [40, 40], // size of the icon
			//shadowSize:   [50, 64], // size of the shadow
			iconAnchor:   [20, 0] // point of the icon which will correspond to marker's location
			//shadowAnchor: [4, 62],  // the same for the shadow
			//popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
			});

			var icono_arbol; //alert(feature.properties.magnitud);

			if(data.features[i].properties.magnitud == 1)
			{
				icono_arbol = icono_arbol_1;
			}
			else if(data.features[i].properties.magnitud == 2)
			{
				icono_arbol = icono_arbol_2;
			}
			else if(data.features[i].properties.magnitud == 3)
			{
				icono_arbol = icono_arbol_3;
			}

			var m = new L.marker(invertir(data.features[i].geometry.coordinates), {icon: icono_arbol, title: data.features[i].properties.nombrevulgar});

			var html_popup = "<div class='card'>";
			

			if(data.features[i].properties.url_ficha !== "" ){

				html_popup += " <div class='card-header'><center><a href=" + data.features[i].properties.url_ficha + " target='_top'><img class='img-fluid' style='max-width: 80%' src=" + encodeURI("https://www.arbolesurbanos.com.ar/" + data.features[i].properties.thumbnail) + " /></a></center></div>";

			}
			else{

				html_popup += " <div class='card-header'><center><img class='img-fluid' style='max-width: 250px;' src=" + encodeURI("https://www.arbolesurbanos.com.ar/" + data.features[i].properties.thumbnail) + " /></center></div>";

			}
			
			
			
			
			html_popup += " <div class='card-body'>";
			html_popup += "       <p><h5><center><strong>" + data.features[i].properties.nombrevulgar + "</strong></center></h5>";
			html_popup += "         <hr />";
			html_popup += "         <h5><strong>Nombre científico:</strong> " + data.features[i].properties.nombrecientifico + "</h5>";
			html_popup += "         <h5><strong>Tipo:</strong> " + data.features[i].properties.tipo + "</h5>";
			html_popup += "         <h5><strong>Follaje:</strong> " + data.features[i].properties.follaje + "</h5>";
			html_popup += "		  <h5><strong>Magnitud:</strong> " + data.features[i].properties.magnitud + "</h5>";
			html_popup += "     </p>";
			html_popup += "  </div>";
			
			html_popup += "</div>";

			var popup = L.responsivePopup({ autoPanPadding: [10,10] }).setContent(html_popup);

			m.bindPopup(popup);
			m.addTo(cluster)

			

		}

		$('#modalCarga').modal('hide')
}



function inicio(){

	$.ajax({
		url: '/localidades',
		success: handleJson,
		async: false
	});


	function handleJson(data) {

		localStorage.setItem('localidades', JSON.stringify(data.rows))

	}

	$("#txtBuscar").keydown(function (e){
		// Capturamos qué telca ha sido
		var keyCode= e.which;
		// Si la tecla es el Intro/Enter
		if (keyCode == 13){
			// Evitamos que se ejecute eventos
			event.preventDefault();
			// Devolvemos falso
			return false;
  		 }
	 });

	var querystring = window.location.search;

	var params = new URLSearchParams(querystring);

	var nombre = params.get('nombre')

		
	var container = L.DomUtil.get('mapid');
	if(container != null){
	container._leaflet_id = null;
	}		

	mymap = L.map('mapid', {
		center: [-40.65, -71.3498],
		zoom: 7
		});

	mymap.on('zoomend',function(){

		var centro = new Array()

		centro[0] = mymap.getCenter().lat
		centro[1] = mymap.getCenter().lng
		
		guardaBBOX(centro,mymap.getZoom())

	})

	mymap.on('moveend',function(){

		var centro = new Array()

		centro[0] = mymap.getCenter().lat
		centro[1] = mymap.getCenter().lng

		guardaBBOX(centro,mymap.getZoom())

	})

	
		
	var base = new L.TileLayer.WMTS( "https://wms.ign.gob.ar/geoserver/capabaseargenmap/gwc/service/wmts" ,
		{
			layer: "capabaseargenmap",
			style: "normal",
			tilematrixSet: "EPSG:3857",
			format: "image/png",
			maxZoom: 21,
			attribution: "<a href='https://wms.ign.gob.ar/geoserver/capabaseargenmap/gwc/service/wmts?REQUEST=GetCapabilities'>WMTS IGN</a>"
		}
	);						  
			
	

	mymap.addLayer(base);

	if(!localStorage.getItem('center')){

		var centro = new Array()

		centro[0] = mymap.getCenter().lat
		centro[1] = mymap.getCenter().lng

		guardaBBOX(centro,mymap.getZoom())

	}	

	$('#txtBuscar').val(localStorage.getItem('nombre'))

	
	if(nombre){

		$('#txtBuscar').val(nombre);
		
		localStorage.setItem('nombre',nombre)

		cargarDatosEnMapa();

	}
	else{

		cargarDatosEnMapa();
	}

	

}	


</script>
</head>
<body onload="inicio();">				
       
		<div class="modal fade" id="modalCarga" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-center">
			<div class="modal-content">
			<div class='modal-header'><h3 class="centrado">Cargando...</h3></div>
			<div class="modal-body">
				<div class='container-fluid'>
					<div class='row'>
							<div class="col-4 col-md-4 col-sm-4"></div>
							<div class="col-4 col-md-4 col-sm-4">
								<center><img class="centrado" src='/img/preloader.gif' /></center>
							</div>
							<div class="col-4 col-md-4 col-sm-4"></div>
					</div>
				</div>
			</div>
			
			</div>
		</div>
		</div>

		<div class="buscador">			
			<form id="frmBuscar" class="form-inline" method="post">				
				<div id="formulario" class="input-group input-group-sm">
					<input class="form-control" type="text" name="txtBuscar" id="txtBuscar" placeholder="Nombre científico/vulgar" autocomplete="off" onkeyup=traeSugerencias() onfocus=borratxt() />					
					<span class="input-group-btn">
						<button id="btnBuscar" type="button" class="btn btn-info btn-flat" onclick=buscar();><i class="fa fa-search"></i></button>
						<button id="btnBorrar" type="button" class="btn btn-info btn-flat" onclick=limpiarSugerencias();><i class="fa fa-trash"></i></button>
					</span>	
    			</div>
			</form>
			<div id="suggestions"></div>
		</div>		

		<div id="mapid"></div>

</body>
</html>
